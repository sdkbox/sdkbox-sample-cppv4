{
    "sdkboxplay": {
        "engine": "3", 
        "name": "sdkboxplay", 
        "args": {
            "patcherrors": 0, 
            "leavetemps": 0, 
            "noupdate": 0, 
            "nopatchingcpp": 0, 
            "remote": 1, 
            "verbose": 0, 
            "project": "./", 
            "forcecopy": 0, 
            "nohelp": 0, 
            "days": 10, 
            "server": "download.sdkbox.com/installer/v1/", 
            "forcedownload": 0, 
            "command": "import", 
            "alwaysupdate": 0, 
            "installer": "", 
            "manifest": "manifest.json", 
            "local": 0, 
            "nopatching": 0, 
            "jsonapi": 0
        }, 
        "version": [
            2, 
            5, 
            1, 
            2
        ], 
        "result": "ok", 
        "message": "success", 
        "constants": {
            "code": "dependencies { compile 'com.google.android.gms:play-services-drive:15.0.0' }\n", 
            "ANDROID_STUDIO_JNI_DIR": "proj.android/app/jni/", 
            "COCOS_2DX_VERSION": "4.0.0", 
            "COCOS_PROJECT_DIR": "./", 
            "VS_PROJECT_DIR": "proj.win32/", 
            "COCOS_2DX_INSTALLATION_VERSION": "unknown", 
            "proguard_rules": "proj.android/app/proguard-rules.pro", 
            "ANDROID_COCOS_PACKAGE_ROOT": "proj.android/app/", 
            "source_dir": "${CMAKE_CURRENT_SOURCE_DIR}", 
            "flag_line": "setup_cocos_app_config(${APP_NAME})", 
            "ANDROID_STUDIO_ACTIVITY_NAME": "AppActivity", 
            "CCC_ENGINE_VERSION": "4.0.0", 
            "proguard_file": "n\\proguard-project.txt", 
            "ANDROID_STUDIO_PROJECT_DIR": "proj.android/", 
            "VS_PROJECT_SLN_FILE": "n/a", 
            "content": "#/****************************************************************************\n# Copyright (c) 2013-2014 cocos2d-x.org\n# Copyright (c) 2015-2017 Chukong Technologies Inc.\n#\n# http://www.cocos2d-x.org\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n# THE SOFTWARE.\n# ****************************************************************************/\n\ncmake_minimum_required(VERSION 3.6)\n\nset(APP_NAME cppv4)\n\nproject(${APP_NAME})\n\nif(XCODE)\n    if(NOT DEFINED CMAKE_XCODE_ATTRIBUTE_IPHONEOS_DEPLOYMENT_TARGET)\n        SET (CMAKE_XCODE_ATTRIBUTE_IPHONEOS_DEPLOYMENT_TARGET 8.0)\n    endif()\nendif()\n\nif(NOT DEFINED BUILD_ENGINE_DONE) # to test cppv4 into root project\n    set(COCOS2DX_ROOT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cocos2d)\n    set(CMAKE_MODULE_PATH ${COCOS2DX_ROOT_PATH}/cmake/Modules/)\n\n    include(CocosBuildSet)\n    add_subdirectory(${COCOS2DX_ROOT_PATH}/cocos ${ENGINE_BINARY_PATH}/cocos/core)\nendif()\n\n# record sources, headers, resources...\nset(GAME_SOURCE)\nset(GAME_HEADER)\n\nset(GAME_RES_FOLDER\n    \"${CMAKE_CURRENT_SOURCE_DIR}/Resources\"\n    )\nif(APPLE OR WINDOWS)\n    cocos_mark_multi_resources(common_res_files RES_TO \"Resources\" FOLDERS ${GAME_RES_FOLDER})\nendif()\n\n# add cross-platforms source files and header files \nlist(APPEND GAME_SOURCE\n     Classes/AppDelegate.cpp\n     Classes/HelloWorldScene.cpp\n     )\nlist(APPEND GAME_HEADER\n     Classes/AppDelegate.h\n     Classes/HelloWorldScene.h\n     )\n\nif(ANDROID)\n    # change APP_NAME to the share library name for Android, it's value depend on AndroidManifest.xml\n    set(APP_NAME MyGame)\n    list(APPEND GAME_SOURCE\n         proj.android/app/jni/hellocpp/main.cpp\n         )\nelseif(LINUX)\n    list(APPEND GAME_SOURCE\n         proj.linux/main.cpp\n         )\nelseif(WINDOWS)\n    list(APPEND GAME_HEADER\n         proj.win32/main.h\n         proj.win32/resource.h\n         )\n    list(APPEND GAME_SOURCE\n         proj.win32/main.cpp\n         proj.win32/game.rc\n         ${common_res_files}\n         )\nelseif(APPLE)\n    if(IOS)\n        list(APPEND GAME_HEADER\n             proj.ios_mac/ios/AppController.h\n             proj.ios_mac/ios/RootViewController.h\n             )\n        set(APP_UI_RES\n            proj.ios_mac/ios/LaunchScreen.storyboard\n            proj.ios_mac/ios/LaunchScreenBackground.png\n            proj.ios_mac/ios/Images.xcassets\n            )\n        list(APPEND GAME_SOURCE\n             proj.ios_mac/ios/main.m\n             proj.ios_mac/ios/AppController.mm\n             proj.ios_mac/ios/RootViewController.mm\n             proj.ios_mac/ios/Prefix.pch\n             ${APP_UI_RES}\n             )\n    elseif(MACOSX)\n        set(APP_UI_RES\n            proj.ios_mac/mac/Icon.icns\n            proj.ios_mac/mac/Info.plist\n            )\n        list(APPEND GAME_SOURCE\n             proj.ios_mac/mac/main.cpp\n             proj.ios_mac/mac/Prefix.pch\n             ${APP_UI_RES}\n             )\n    endif()\n    list(APPEND GAME_SOURCE ${common_res_files})\nendif()\n\n# mark app complie info and libs info\nset(all_code_files\n    ${GAME_HEADER}\n    ${GAME_SOURCE}\n    )\nif(NOT ANDROID)\n    add_executable(${APP_NAME} ${all_code_files})\nelse()\n    add_library(${APP_NAME} SHARED ${all_code_files})\n    add_subdirectory(${COCOS2DX_ROOT_PATH}/cocos/platform/android ${ENGINE_BINARY_PATH}/cocos/platform)\n    target_link_libraries(${APP_NAME} -Wl,--whole-archive cpp_android_spec -Wl,--no-whole-archive)\nendif()\n\ntarget_link_libraries(${APP_NAME} cocos2d)\ntarget_include_directories(${APP_NAME}\n        PRIVATE Classes\n        PRIVATE ${COCOS2DX_ROOT_PATH}/cocos/audio/include/\n)\n\n# mark app resources\nsetup_cocos_app_config(${APP_NAME})\nif(APPLE)\n    set_target_properties(${APP_NAME} PROPERTIES RESOURCE \"${APP_UI_RES}\")\n\n    if(MACOSX)\n        set_xcode_property(${APP_NAME} INFOPLIST_FILE \"${CMAKE_CURRENT_SOURCE_DIR}/proj.ios_mac/mac/Info.plist\")\n    elseif(IOS)\n        set_xcode_property(${APP_NAME} INFOPLIST_FILE \"${CMAKE_CURRENT_SOURCE_DIR}/proj.ios_mac/ios/Info.plist\")\n        set_xcode_property(${APP_NAME} ASSETCATALOG_COMPILER_APPICON_NAME \"AppIcon\")\n    endif()\n\n    # For code-signing, set the DEVELOPMENT_TEAM:\n    #set_xcode_property(${APP_NAME} DEVELOPMENT_TEAM \"GRLXXXX2K9\")\nelseif(WINDOWS)\n    cocos_copy_target_dll(${APP_NAME})\nendif()\n\nif(LINUX OR WINDOWS)\n    cocos_get_resource_path(APP_RES_DIR ${APP_NAME})\n    cocos_copy_target_res(${APP_NAME} LINK_TO ${APP_RES_DIR} FOLDERS ${GAME_RES_FOLDER})\nendif()\n", 
            "COCOS_PROJECT_HINT": "./", 
            "ANDROID_STUDIO_PROPERTIES": "proj.android/app/project.properties/", 
            "VS_PROJECT_PROJ_FILE": "n/a", 
            "check_str": "com.google.android.gms:play-services-drive", 
            "COCOS_ENGINE_TYPE": "unknown", 
            "ANDROID_PROJECT_DIR": "n/a", 
            "ANDROID_COCOS_SRC_DIR": "proj.android/app/src/org/cocos2dx/lib/", 
            "COCOS_CLASSES_DIR": "Classes/", 
            "XCODE_PROJECT": "n/a", 
            "COCOS_ENGINE_MAKER": "cocos2d-x", 
            "ANDROID_STUDIO_ACTIVITY_PATH": "proj.android/app/src/org/cocos2dx/cpp/", 
            "ANDROID_SDK_DIR": "n/a", 
            "COCOS_2DX_ROOT": "unknown", 
            "ANDROID_MANIFEST": "n/a", 
            "ANDROID_STUDIO_MANIFEST": "proj.android/app/AndroidManifest.xml", 
            "ANDROID_JNI_DIR": "n/a", 
            "IOS_PROJECT_DIR": "proj.ios_mac/", 
            "ANDROID_STUDIO_MK": "proj.android/app/jni/Android.mk/", 
            "XCODE_PROJECT_DIR": "n/a", 
            "name": "PluginSdkboxPlay", 
            "ANDROID_MK_USES_WILDCARDS": "n/a", 
            "cmake_file": "CMakeLists.txt", 
            "COCOS_BACKUP_DIR": "backup-2020-02-10/", 
            "ANDROID_PROPERTIES": "n/a", 
            "SDKBOX_PACKAGE_NAME": "sdkboxplay", 
            "COCOS_RESOURCES_DIR": "Resources/", 
            "ANDROID_STUDIO_LIBS_DIR": "proj.android/app/libs/", 
            "SDKBOX_PLUGIN_NAME": "SdkboxPlay", 
            "ANDROID_LIBS_DIR": "proj.android/app/libs/", 
            "ANDROID_MK": "n/a", 
            "APPLICATION_MK": "n/a"
        }
    }, 
    "googleplayservices": {
        "engine": "3", 
        "name": "googleplayservices", 
        "args": {
            "patcherrors": 0, 
            "leavetemps": 0, 
            "noupdate": 0, 
            "nopatchingcpp": 0, 
            "remote": 1, 
            "verbose": 0, 
            "project": "./", 
            "forcecopy": 0, 
            "nohelp": 0, 
            "days": 10, 
            "server": "download.sdkbox.com/installer/v1/", 
            "forcedownload": 0, 
            "command": "import", 
            "alwaysupdate": 0, 
            "installer": "", 
            "manifest": "manifest.json", 
            "local": 0, 
            "nopatching": 0, 
            "jsonapi": 0
        }, 
        "version": [
            2, 
            5, 
            1, 
            2
        ], 
        "result": "ok", 
        "message": "success", 
        "constants": {
            "code": "dependencies { compile 'com.google.android.gms:play-services-base:16.1.0' }\n", 
            "ANDROID_STUDIO_JNI_DIR": "proj.android/app/jni/", 
            "COCOS_2DX_VERSION": "4.0.0", 
            "COCOS_PROJECT_DIR": "./", 
            "VS_PROJECT_DIR": "proj.win32/", 
            "COCOS_2DX_INSTALLATION_VERSION": "unknown", 
            "ANDROID_COCOS_PACKAGE_ROOT": "proj.android/app/", 
            "ANDROID_STUDIO_ACTIVITY_NAME": "AppActivity", 
            "CCC_ENGINE_VERSION": "4.0.0", 
            "ANDROID_STUDIO_PROJECT_DIR": "proj.android/", 
            "VS_PROJECT_SLN_FILE": "n/a", 
            "COCOS_PROJECT_HINT": "./", 
            "ANDROID_STUDIO_PROPERTIES": "proj.android/app/project.properties/", 
            "VS_PROJECT_PROJ_FILE": "n/a", 
            "check_str": "com.google.android.gms:play-services-base", 
            "COCOS_ENGINE_TYPE": "unknown", 
            "ANDROID_PROJECT_DIR": "n/a", 
            "ANDROID_COCOS_SRC_DIR": "proj.android/app/src/org/cocos2dx/lib/", 
            "COCOS_CLASSES_DIR": "Classes/", 
            "XCODE_PROJECT": "n/a", 
            "COCOS_ENGINE_MAKER": "cocos2d-x", 
            "ANDROID_STUDIO_ACTIVITY_PATH": "proj.android/app/src/org/cocos2dx/cpp/", 
            "ANDROID_SDK_DIR": "n/a", 
            "COCOS_2DX_ROOT": "unknown", 
            "ANDROID_MANIFEST": "n/a", 
            "ANDROID_STUDIO_MANIFEST": "proj.android/app/AndroidManifest.xml", 
            "ANDROID_JNI_DIR": "n/a", 
            "IOS_PROJECT_DIR": "proj.ios_mac/", 
            "ANDROID_STUDIO_MK": "proj.android/app/jni/Android.mk/", 
            "XCODE_PROJECT_DIR": "n/a", 
            "ANDROID_MK_USES_WILDCARDS": "n/a", 
            "COCOS_BACKUP_DIR": "backup-2020-02-10/", 
            "ANDROID_PROPERTIES": "n/a", 
            "COCOS_RESOURCES_DIR": "Resources/", 
            "ANDROID_STUDIO_LIBS_DIR": "proj.android/app/libs/", 
            "ANDROID_LIBS_DIR": "proj.android/app/libs/", 
            "ANDROID_MK": "n/a", 
            "APPLICATION_MK": "n/a"
        }
    }
}